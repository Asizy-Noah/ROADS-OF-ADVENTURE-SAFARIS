<div class="dashboard-content">

    <form id="addCategoryForm" class="category-form" action="/categories/dashboard/add" method="POST" enctype="multipart/form-data">
        <div class="form-section">
            <div class="form-group">
                <label for="categoryName">Name</label>
                <input type="text" id="categoryName" name="name" class="form-control" required
                       value="<%= typeof oldInput !== 'undefined' && oldInput.name ? oldInput.name : '' %>">
            </div>

            <div class="form-group">
                <label for="categorySlug">Slug</label>
                <input type="text" id="categorySlug" name="slug" class="form-control" readonly
                       value="<%= typeof oldInput !== 'undefined' && oldInput.slug ? oldInput.slug : '' %>">
                <small class="form-text text-muted">Automatically generated from name. Click to manually edit.</small>
            </div>

            
            <div class="form-group">
                <label for="categoryDescription">Description</label>
                <div id="categoryDescriptionEditor" class="editor-container"></div>
                <input type="hidden" name="description" id="categoryDescription"
                       value="<%= typeof oldInput !== 'undefined' && oldInput.description ? oldInput.description : '' %>">
            </div>
            
            <div class="form-group">
                <label for="categoryCountry">Country</label>
                <select id="categoryCountry" name="country" class="form-control">
                    <option value="">All Countries</option>
                    <% countries.forEach(country => { %>
                        <option value="<%= country._id %>"
                            <%= typeof oldInput !== 'undefined' && oldInput.country && oldInput.country === country._id.toString() ? 'selected' : '' %>>
                            <%= country.name %>
                        </option>
                    <% }); %>
                </select>
                <small class="form-text text-muted">Select a country or leave as "All Countries" if this category applies to all</small>
            </div>
            
            <div class="form-group">
                <label for="coverImage">Upload Cover Image</label>
                <div class="file-upload-container">
                    <input type="file" id="coverImage" name="image" class="file-input" accept="image/*">
                    <div class="file-upload-box">
                        <i class="fas fa-cloud-upload-alt"></i>
                        <span>Drag & drop image or click to browse</span>
                    </div>
                    <div class="file-preview" id="imagePreview">
                        <% if (typeof oldInput !== 'undefined' && oldInput.image) { %>
                            <img src="<%= oldInput.image %>" alt="Image Preview" style="display: block; max-width: 100%; height: auto;">
                        <% } else { %>
                            <img src="" alt="Image Preview" style="display: none;">
                        <% } %>
                    </div>
                </div>
            </div>
        </div>
        
        <div class="form-section">
            <h3 class="section-title">SEO Information</h3>
            
            <div class="form-group">
                <label for="seoTitle">SEO Title</label>
                <input type="text" id="seoTitle" name="seoTitle" class="form-control"
                       value="<%= typeof oldInput !== 'undefined' && oldInput.seoTitle ? oldInput.seoTitle : '' %>">
                <small class="form-text text-muted">Recommended length: 50-60 characters</small>
            </div>
            
            <div class="form-group">
                <label for="seoDescription">Meta Description</label>
                <textarea id="seoDescription" name="seoDescription" class="form-control" rows="3"><%= typeof oldInput !== 'undefined' && oldInput.seoDescription ? oldInput.seoDescription : '' %></textarea>
                <small class="form-text text-muted">Recommended length: 150-160 characters</small>
            </div>
            
            <div class="form-group">
                <label for="seoKeywords">Meta Keywords</label>
                <input type="text" id="seoKeywords" name="seoKeywords" class="form-control"
                       value="<%= typeof oldInput !== 'undefined' && oldInput.seoKeywords ? oldInput.seoKeywords : '' %>">
                <small class="form-text text-muted">Separate keywords with commas</small>
            </div>
        </div>
        
        <div class="form-actions">
            <button type="submit" class="btn btn-primary">Add Category</button>
        </div>
    </form>
</div>

<script src="https://cdn.quilljs.com/1.3.6/quill.min.js"></script>
<link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">
<link href="/css/dashboard.css" rel="stylesheet">

<script>
    document.addEventListener('DOMContentLoaded', function() {
        // --- Quill Editor Setup ---
        var quill = new Quill('#categoryDescriptionEditor', {
            theme: 'snow',
            placeholder: 'Write a detailed description...',
            modules: {
                toolbar: [
                    [{ 'header': [1, 2, 3, 4, 5, 6, false] }],
                    ['bold', 'italic', 'underline', 'strike'],
                    ['blockquote', 'code-block'],
                    [{ 'list': 'ordered'}, { 'list': 'bullet' }],
                    [{ 'script': 'sub'}, { 'script': 'super' }],
                    [{ 'indent': '-1'}, { 'indent': '+1' }],
                    [{ 'direction': 'rtl' }],
                    [{ 'color': [] }, { 'background': [] }],
                    [{ 'font': [] }],
                    [{ 'align': [] }],
                    ['link', 'image', 'video'],
                    ['clean']
                ]
            }
        });

        // Set initial content for Quill from oldInput.description (if available)
        const initialDescriptionElement = document.getElementById('categoryDescription');
        if (initialDescriptionElement && initialDescriptionElement.value) {
            try {
                quill.root.innerHTML = initialDescriptionElement.value;
            } catch (e) {
                console.error("Error setting Quill initial content:", e);
                // Fallback: If HTML is malformed, just set plain text
                quill.setText(initialDescriptionElement.value);
            }
        }

        // On form submit, update hidden input with Quill's HTML content
        document.getElementById('addCategoryForm').addEventListener('submit', function() {
            document.getElementById('categoryDescription').value = quill.root.innerHTML;
        });

        // --- Image Preview Logic ---
        const coverImageInput = document.getElementById('coverImage');
        const imagePreview = document.getElementById('imagePreview');
        const imagePreviewImg = imagePreview.querySelector('img');

        coverImageInput.addEventListener('change', function() {
            const file = this.files[0];
            if (file) {
                const reader = new FileReader();
                reader.onload = function(e) {
                    imagePreviewImg.src = e.target.result;
                    imagePreviewImg.style.display = 'block';
                };
                reader.readAsDataURL(file);
            } else {
                imagePreviewImg.src = '';
                imagePreviewImg.style.display = 'none';
            }
        });

        // --- Slug Generation Logic ---
        const categoryNameInput = document.getElementById('categoryName');
        const categorySlugInput = document.getElementById('categorySlug');
        const slugHelpText = categorySlugInput.nextElementSibling;

        function generateSlug(text) {
            return text
                .toString()
                .normalize('NFD').replace(/[\u0300-\u036f]/g, '')
                .toLowerCase()
                .trim()
                .replace(/\s+/g, '-')
                .replace(/[^\w-]+/g, '')
                .replace(/--+/g, '-');
        }

        categoryNameInput.addEventListener('input', function() {
            if (categorySlugInput.readOnly) {
                categorySlugInput.value = generateSlug(this.value);
            }
        });

        categorySlugInput.addEventListener('click', function() {
            if (this.readOnly) {
                this.readOnly = false;
                this.style.backgroundColor = '#fff';
                if (slugHelpText) {
                    slugHelpText.textContent = 'Manually editable.';
                }
            }
        });

        categorySlugInput.addEventListener('blur', function() {
            if (!this.readOnly && this.value === '') {
                this.value = generateSlug(categoryNameInput.value);
                // Re-enable readonly if it was made editable but then left empty
                this.readOnly = true;
                this.style.backgroundColor = '';
                if (slugHelpText) {
                    slugHelpText.textContent = 'Automatically generated from name. Click to manually edit.';
                }
            }
        });

        // Initial slug generation/check on page load if name field is pre-filled
        if (categoryNameInput.value && !categorySlugInput.value) {
            categorySlugInput.value = generateSlug(categoryNameInput.value);
        }
    });
</script>

<style>
    /* Add basic styling for Quill Editor if not already present */
    .editor-container {
        min-height: 200px; /* Adjust as needed */
        margin-bottom: 15px;
    }
</style>